{"version":3,"sources":["components/Movie.js","components/Header.js","components/Search.js","components/App.js","index.js"],"names":["Movie","movie","poster","Poster","className","Title","width","alt","src","Year","Header","props","text","Search","useState","searchValue","setSearchValue","value","onChange","e","target","type","onClick","preventDefault","search","App","loading","setLoading","movies","setMovies","errorMessage","setErrorMessage","useEffect","fetch","then","response","json","jsonResponse","Response","Error","map","index","key","ReactDOM","render","document","getElementById"],"mappings":"4OAwBeA,G,MApBD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACPC,EAA0B,QAAjBD,EAAME,OAHG,qGAGsCF,EAAME,OAEpE,OACI,yBAAKC,UAAU,SACX,4BACKH,EAAMI,OAEX,6BACI,yBACIC,MAAM,MACNC,IAAG,4BAAuBN,EAAMI,OAChCG,IAAKN,KAGb,+BAAKD,EAAMQ,KAAX,QCTGC,EARA,SAACC,GACZ,OACI,4BAAQP,UAAY,cAChB,4BAAKO,EAAMC,QCsBRC,EAzBA,SAACF,GAAW,IAAD,EACgBG,mBAAS,IADzB,mBACfC,EADe,KACFC,EADE,KAatB,OACI,0BAAMZ,UAAY,UACd,2BACAa,MAASF,EACTG,SAdyB,SAACC,GAC9BH,EAAeG,EAAEC,OAAOH,QAcpBI,KAAM,SAEN,2BAAOC,QAbY,SAACH,GACxBA,EAAEI,iBACFP,EAAe,IACfL,EAAMa,OAAOT,IAU4BM,KAAK,SAASJ,MAAM,aCyCtDQ,MAvDf,WAAgB,IAAD,EACiBX,oBAAS,GAD1B,mBACNY,EADM,KACGC,EADH,OAEeb,mBAAS,IAFxB,mBAENc,EAFM,KAEEC,EAFF,OAG2Bf,mBAAS,MAHpC,mBAGNgB,EAHM,KAGQC,EAHR,KAuCb,OAlCAC,qBAAU,WACRC,MARkB,kDAUfC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAE1BF,MAAK,SAAAG,GAEJR,EAAUQ,EAAaxB,QAGvBc,GAAW,QAEd,IAuBD,yBAAKvB,UAAU,OACb,kBAAC,EAAD,CAAQQ,KAAK,iBACb,kBAAC,EAAD,CAAQY,OArBG,SAAAT,GACbY,GAAW,GACXI,EAAgB,MAEhBE,MAAM,8BAAD,OAA+BlB,EAA/B,qBACFmB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAC0B,SAA1BA,EAAaC,UACfT,EAAUQ,EAAaxB,QACvBc,GAAW,KAEXI,EAAgBM,EAAaE,OAC7BZ,GAAW,UAUf,uBAAGvB,UAAU,aAAb,yCACA,yBAAKA,UAAU,UACZsB,IAAYI,EACX,4CAA2BA,EAAgB,yBAAK1B,UAAU,gBAAgB0B,GAAwBF,EAAOY,KAAI,SAACvC,EAAOwC,GAAR,OAC1G,kBAAC,EAAD,CAAOC,IAAG,UAAKD,EAAL,YAAcxC,EAAMI,OAASJ,MAAOA,UCjD3D0C,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.4e5e5ce8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst DEF_PLACEHOLDER_IMG = \"https://m.media-amazon.com/images/M/MV5BMTczNTI2ODUwOF5BMl5BanBnXkFtZTcwMTU0NTIzMw@@._V1_SX300.jpg\";\r\n\r\nconst Movie = ({ movie }) => {\r\n    const poster = movie.Poster === \"N/A\" ? DEF_PLACEHOLDER_IMG : movie.Poster;\r\n\r\n    return (\r\n        <div className=\"movie\">\r\n            <h2>\r\n                {movie.Title}\r\n            </h2>\r\n            <div>\r\n                <img\r\n                    width=\"200\"\r\n                    alt={`the movie titled: ${movie.Title}`}\r\n                    src={poster}\r\n                />\r\n            </div>\r\n            <p>({movie.Year})</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Movie;","import React from \"react\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className = \"App-header\">\r\n            <h2>{props.text}</h2>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { useState } from \"react\";\r\n\r\nconst Search = (props) => {\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n    const handleSearchInputChanges = (e) => {\r\n        setSearchValue(e.target.value);\r\n    }\r\n\r\n    const callSearchFunction = (e) => {\r\n        e.preventDefault();\r\n        setSearchValue(\"\");\r\n        props.search(searchValue);\r\n    }\r\n\r\n    return (\r\n        <form className = \"search\">\r\n            <input \r\n            value = {searchValue}\r\n            onChange = {handleSearchInputChanges}\r\n            type =\"text\"\r\n            />\r\n            <input onClick ={callSearchFunction} type=\"submit\" value=\"SEARCH\" />\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Search; ","import React, { useState, useEffect } from 'react';\nimport \"../App.css\";\nimport Movie from \"./Movie\"\nimport Header from './Header';\nimport Search from \"./Search\"\n\nconst MOVIE_API_URL = \"https://www.omdbapi.com/?s=man&apikey=4a3b711b\";\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    fetch(MOVIE_API_URL)\n      //fetch takes a source and returns a response. you receive the response as soon as all headers have arrived.\n      .then(response => response.json())\n      //Calling .json() gets you another promise for the body of the http response that is yet to be loaded.\n      .then(jsonResponse => {\n        // take the response, and call a function to\n        setMovies(jsonResponse.Search);\n        //within the JSON package, find Search heading\n        //s={searchquery}, returns an array of 10 movies\n        setLoading(false);\n      })\n  }, []);\n  //passing an empty array causes use effect to run only after the initial render\n\n\n  const search = searchValue => {\n    setLoading(true);\n    setErrorMessage(null);\n\n    fetch(`https://www.omdbapi.com/?s=${searchValue}&apikey=4a3b711b`)\n      .then(response => response.json())\n      .then(jsonResponse => {\n        if (jsonResponse.Response === \"True\") {\n          setMovies(jsonResponse.Search);\n          setLoading(false);\n        } else {\n          setErrorMessage(jsonResponse.Error);\n          setLoading(false);\n        }\n      });\n  };\n\n\n  return (\n    <div className=\"App\">\n      <Header text=\"Movie Finder\" />\n      <Search search={search} />\n      <p className=\"App-intro\">Sharing a few of our favourite movies</p>\n      <div className=\"movies\">\n        {loading && !errorMessage ? (\n          <span>loading...</span>) : errorMessage ? (<div className=\"errorMessage\">{errorMessage}</div>) : (movies.map((movie, index) =>\n            (<Movie key={`${index}-${movie.Title}`} movie={movie} />\n            ))\n          )}\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}